.main {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  gap: 40px;
  align-items: center;
  min-height: calc(100vh - 40px);
  font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,
    Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

.headline {
  padding-top: 20px;
}

.paragraph {
  font-size: 20px;
  text-align: left;
  margin-bottom: 8px;
}

.listElem {
  margin-bottom: 28px;
  margin-left: 20px;
}

.listElem::marker {
  font-size: 20px;
}

.input {
  height: 44px;
  padding-left: 10px;
  font-size: 24px;
}

.table {
  border: 1px solid black;
  border-collapse: collapse;
}

.tableData {
  border: 1px solid black;
  padding: 6px;
  font-size: 20px;
  border-collapse: collapse;
}

.tableDataActive {
  color: #ffffff;
  background-color: blue;
  font-size: 24px;
  font-weight: bold;
}

.draggable {
  touch-action: manipulation;
}

.draggableContainer {
  display: flex;
  flex-direction: column;
  gap: 12px;
  padding-left: 32px;

  .emptyBlock {
    height: 89px;
    width: 96px;
  }
}

.buttonContainer {
  display: flex;
  flex-direction: row;
  gap: 40px;
}

.experimentContainer {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  height: 300px;
  padding-right: 100px;
}

.sliderContainer {
  display: flex;
  justify-content: space-evenly;
  transform: translateX(-20px);
}

.valueContainer {
  position: absolute;
  transform: translatex(20px);
}

.value {
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  width: 40px;
  height: 40px;
  background-color: blue;
  color: white;
}

.slider {
  width: 300px;
  transform: rotate(-90deg);
}

.glass {
  height: 300px;
  width: 150px;
  border: 2px solid black;
  border-top: none;
  display: flex;
  justify-content: center;
  align-items: flex-end;
  transform: translatex(-20px);

  background: linear-gradient(#ffffff 40%, blue 40%);
}

.radioLabel {
  margin-top: 30px;
  margin-inline: 8px 30px;
  font-size: 20px;
}

@keyframes rotate {
  from {
    transform: rotate(360deg);
  }
  to {
    transform: rotate(0deg);
  }
}
